.global _isr_000
.global _isr_001
.global _isr_002
.global _isr_003
.global _isr_004
.global _isr_005
.global _isr_006
.global _isr_007
.global _isr_008
.global _isr_009

_isr_000:
  cli
  pushq byte 0         # Push a dummy error code (if ISR0 doesn't push it's own error code)
  pushq byte 0         # Push the interrupt number (0)
  jmp isr_common_stub  # Go to our common handler. 
  sti
  retq

isr_common_stub:
  pushqa                    # Pushes edi,esi,ebp,esp,ebx,edx,ecx,eax
  movq rax, ds               # Lower 16-bits of eax = ds.
  pushq eax                 # save the data segment descriptor
  movq rax, 0x10  # load the kernel data segment descriptor
  movq ds, rax
  movq es, rax
  movq fs, rax
  movq gs, rax
  movq ss, rax
  call isr_handler_0

  popq eax        # reload the original data segment descriptor
  movq ds, rax
  movq es, rax
  movq fs, rax
  movq gs, rax
  movq ss, rax
  popqa                     # Pops edi,esi,ebp...
  addq esp, 16     # Cleans up the pushed error code and pushed ISR number
  sti
  iretq           # pops 5 things at once: CS, EIP, EFLAGS, SS, and ESP  

